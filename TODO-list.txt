To-do list:
- add logging capabilities
- validate your result

--------------------
2016-05-30
- Some potential questions (found in paper 'characterizing IPv6 control':
    - to study the frequency of routing changes towards the certain IPv4 and IPv6 prefix (on what basis? monthly? weekly?)
    - is there correlations between routing instability in IPv4 and IPv6?
    (IPv6 AS relation)
    - which ASN is the more dominant in AS path towards anycast AS in interest?
    - how is the evolution of anycast prefix announcement/routing (?)?
    - which connects faster: IPv4 or IPv6? there is already paper discuss about it. But does it also apply for anycast?
    - can you tell something about the effect of AS-prepending on anycast service?
- getting more familiar with bgpstream
- use Neo4j?
    Neo4j & D3 --> http://blog.ashokalella.com/neo4j/d3/2015/04/27/neo4j-and-d3/
- Questions:
    - What is MRT format? How can I process it?


2016-05-28
- official change of directions: write later
- additional references:
    Characterizing IPv6 control and data plane stability
        study their methodology
    IPv6 AS Relationships, Cliques, and Congruence [!]
    AS Relationships, Customer Cones, and Validation
    Traceroute Probe Method and Forward IP Path Inference
    Measuring the Evolution of Internet Peering Agreements
    Measuring the Deployment of IPv6: Topology, Routing and Performance [!]
    IPv4 versus IPv6 - who connects faster? [!]
    Dissecting the Largest National Ecosystem of Public Internet eXchange Points in Brazil [!]
    BGP Route Leaks Analysis
- possible RQs:
    - which connects faster: IPv4 or IPv6?
        there is already paper discuss about it. But does it also apply for anycast?

2016-95-26
- todo: improve the UI
- todo: reselect the probes to those which have dual-stack capability!
- todo: test querying RIPE Atlas using 1170 probes

2016-05-25
- one thing for sure: you can't request data from BGP data provider on arbitrary interval.
- It seems I have to use local data. The question is, for which period?
- can I access data from RIPE Atlas using 1170 probes? If not, then I should create my own measurement

- Questions:
    - how can I configure BGPStream to use local data?
        - use bgpreader (https://bgpstream.caida.org/docs/tools/bgpreader)
    - how to configure pybgpstream to use bgpreader?
        - no need for this
    - how can I configure BGPStream to use data from OpenBMP?
        - simply use the 'collector' parameter! The only problem is that OpenBMP only provides data starting from january 2016
    - all route collectors dump their data periodically. Then, why can't I access data for arbitrary interval?
        - Data is available at 00:00, 08:00, and 16:00

2016-05-24
- get selected probes (1170 probes)
- prepare for SIDN meeting!
    -
- do this! https://github.com/CAIDA/bgpstream/issues/2
- I should use BGPStream in historical data mode (read the paper section 3.1). Thus, I should download some RIB data from
  RIPE RIS and RouteViews. RIB data is huge, so I need to determine an interval of time of historical data.
  - maybe I do it in the wrong way:
    - the paper says that they have official repository that is accessible through BGPStream broker. However, in my experience,
      pybgpstream always take long time to process the data. My guess is that libbgpstream downloads dump data from repositories
      first to local machine and do processing later. How can I configure BGPStream to access this official repository instead
      of downloading data from RIS and RouteViews?


Remarks:
- should I create new measurement?

2016-05-23
- selecting probes close to route collectors
    - RIPE Atlas only provides coordinates, not the address. Need to map GPS coord. into its address. I use geopy.
    - create the list of countries where RRs reside. I put all probes in that countries into my db.
    - todo: switch back to python3! use pybgpstream directly from github
        - read this: https://github.com/CAIDA/bgpstream/issues/2


2016-05-13
- fix populate_db.py
- fix problem caused by 'aggregation' text in RIS data (see method _get_latest_data() from ris.py)

  Remarks:
  - why BGP community is crucial, so that it is included in RIS data?

2016-05-12
- finish connecting backend to frontend. Data is plotted fine. The only thing is, it takes so long to load data using
  BGPStream.

 Remarks:
    - Now, focus on analyzing the (potential) difference between IPv4 and IPv6 catchment areas:
    - the idea: is there any difference between catchment areas of IPv4 and IPv6 DNS services? If there is (I hope so),
      what would be the cause? Can this tool detect that? Is there any difference between control and data-plane?
    - use built-in measurement. Start from root servers with small numbers of instances first. Let say, C.
    - Start familiarize and working with CHAOS
    - can I create geographical visualization based on this?
    - don't forget to update probe data in db

- about the tool in general:
    Back-end:
    - change it to use built-in measurement against a certain root server, instead of just using random measurement ID

    Visualization:
    - finish working on statistics widgets
    - use better template
    - TODO: there is possibility that measurement data retrieved from RIS is empty. Add a handler for this condition in
            database helper (db.py), especially in bulk write method, because it generates exception for empty data
    - hovering an AS node should provide information about the respective ASN (the organization, description, etc.)

2016-05-11
- incorporating BGPStream into ris.py for historical control-plane data

2016-05-10
- updating front-end?

2016-05-09
- IPv6 measurement feature is finished
- use IPv6 data from Cymru. In the future, migrate IPv4 to use Cymru as well
- TODO: check validity of tree data for IPv6 data-plane

2016-05-06
- finish ris.py
Remarks:
- previously, my idea was to attach probes into ASN nodes in the tree visualization. While it is correct for data-plane,
  doing so for control-plane is misleading. Firstly, control-plane data is taken from route collector.
- is it possible to compare two different data-plane data when most of the time traceroute data is incomplete? Of course
  I can say the path experienced by a certain probe changes, but I can't say that the path is shorter or longer.
- how is it possible to create data-plane tree that contains few nodes in its 1st level?
- where can I get time-based looking glass data? RIS only provides recent data only --> install pybgpstream
- where can I get static IPv6 ASN list? --> just use Cymru

2016-05-05
- mongodb is up and running
- refactor the code
- data for data-plane is available
- datetimepicker is restricted to today

2016-05-02
- connect front-end with back-end
- start working with dynamic data

2016-05-01
- add Flask

2016-04-30
- add zoom and pan features to the tree graph

2016-04-28
- comparison feature is now working properly (although the CSS needs to be refined)